# Loosely based on vault.spec by John Boero - jboero@hashicorp.com

# This macro can be slightly different than %%{version}.
# For example, it should have a dash instead of tilde for release candidates.
%global package_version 2.3.2

%global go_version @GOVERSION@

%global oldname vault

Name: openbao
Version: 2.3.2
Release: %autorelease
Summary: A tool for securely accessing secrets
# See LICENSE for primary license
# See LICENSE_DEPENDENCIES.md for bundled dependencies
License: MPL-2.0
Source0: https://github.com/opensciencegrid/%{name}-rpm/releases/download/v%{package_version}/%{name}-rpm-%{package_version}.tar.gz
Source1: https://github.com/openbao/%{name}/releases/download/v%{package_version}/%{name}-dist-%{package_version}.tar.xz
Patch0: goversion.patch

BuildRequires: golang
BuildRequires: systemd-rpm-macros
URL: https://openbao.org

# This line gets replaced by bundled provides

%description
Openbao secures, stores, and tightly controls access to tokens, passwords,
certificates, API keys, and other secrets in modern computing. Openbao handles
leasing, key revocation, key rolling, and auditing. Through a unified API, users
can access an encrypted Key/Value store and network encryption-as-a-service, or
generate AWS IAM/STS credentials, SQL/NoSQL databases, X.509 certificates, SSH
credentials, and more.

%package %{oldname}-compat
Summary: Vault-compatible command and service
Requires: %{name} = %{version}-%{release}
Provides: %{oldname} = %{version}-%{release}
Obsoletes: %{oldname} < 2.0

%description %{oldname}-compat
Provides a compatibility layer on top of OpenBao to emulate a Hashicorp
Vault package.

%prep
%setup -q -n %{name}-rpm-%{package_version}
RPMDIR=$(pwd)
%setup -q -T -b 1 -n %{name}-dist-%{package_version}
%autopatch

%build
# starts out in %%{name}-dist-%%{package_version} directory

# this prevents it from complaining that ui assets are too old
touch http/web_ui/index.html

uname_m=$(uname -m)
GO_BUILD_MODE="-buildmode pie"
GO_BUILD_GCFLAGS=
GO_BUILD_LDFLAGS="-X github.com/%{name}/%{name}/version.fullVersion=%{version}-%{release}"
GO_BUILD_LDFLAGS+=" -X github.com/%{name}/%{name}/version.GitCommit="
BUILD_DATE="$(date --utc +%Y-%m-%dT%H:%M:%SZ)"
GO_BUILD_LDFLAGS+=" -X github.com/%{name}/%{name}/version.BuildDate=${BUILD_DATE}"
GO_BUILD_LDFLAGS+=" -B gobuildid"
GO_BUILD_TAGS="ui"

# These are from the %%gobuild macro which we can't use because it doesn't
# allow for extra tags (nor extra gcflags for debug mode).
GO_BUILD_TAGS+=" rpm_crashtraceback libtrust_openssl"
GO_BUILD_LDFLAGS+=" -linkmode=external -compressdwarf=false"
GO_BUILD_LDFLAGS+=" -extldflags '%__global_ldflags'"

%if "%{?go_debug}" != ""
# add debugging & testing flags
GO_BUILD_GCFLAGS="all=-N -l"
GO_BUILD_LDFLAGS+=" -X github.com/%{name}/%{name}/version.VersionMetadata=testonly"
# openbao documentation says testonly should not be used for production builds
GO_BUILD_TAGS+=" testonly"
%endif

# instructions from https://openbao.org/docs/contributing/packaging/#ui-release
# The ui is pre-prepared in the source distribution tarball
go build ${GO_BUILD_MODE} -gcflags "${GO_BUILD_GCFLAGS}" -ldflags "${GO_BUILD_LDFLAGS}" -buildvcs=false -o bin/bao -tags "${GO_BUILD_TAGS}"

%install
# starts out in %%{name}-dist-%%{package_version} directory
mkdir -p %{buildroot}%{_bindir}/
cp -p bin/bao %{buildroot}%{_bindir}/
ln -s bao %{buildroot}%{_bindir}/%{oldname}

cd ../%{name}-rpm-%{package_version}
mkdir -p %{buildroot}%{_sysconfdir}/%{name}.d/tls
cp -p %{name}.hcl %{buildroot}%{_sysconfdir}/%{name}.d
ln -s %{name}.d %{buildroot}%{_sysconfdir}/%{oldname}.d

mkdir -p %{buildroot}%{_datadir}/man/man1
gzip -c bao.1 >%{buildroot}%{_datadir}/man/man1/bao.1.gz
ln -s bao.1 %{buildroot}%{_datadir}/man/man1/%{oldname}.1.gz

mkdir -p %{buildroot}%{_sharedstatedir}/%{name}
ln -s %{name} %{buildroot}%{_sharedstatedir}/%{oldname}

mkdir -p %{buildroot}%{_unitdir}
cp -p %{name}.service %{buildroot}%{_unitdir}
ln -s %{name}.service %{buildroot}%{_unitdir}/%{oldname}.service

mkdir -p %{buildroot}%{_sysusersdir}
cp %{name}.conf %{buildroot}%{_sysusersdir}/%{name}.conf

%files
%verify(not caps) %{_bindir}/bao
%dir %{_sysconfdir}/%{name}.d
%attr(0700,%{name},%{name}) %dir %{_sysconfdir}/%{name}.d/tls
%config(noreplace) %{_sysconfdir}/%{name}.d/%{name}.hcl
%attr(0700,%{name},%{name}) %dir %{_sharedstatedir}/%{name}
%{_unitdir}/%{name}.service
%{_sysusersdir}/%{name}.conf
%{_datadir}/man/man1/bao.1.gz
%license LICENSE
%license LICENSE_DEPENDENCIES.md
%doc README.md
%doc CHANGELOG.md

%files %{oldname}-compat
%{_bindir}/%{oldname}
%{_sysconfdir}/%{oldname}.d
%{_sharedstatedir}/%{oldname}
%{_datadir}/man/man1/%{oldname}.1.gz
%{_unitdir}/%{oldname}.service

%pre
getent group %{name} > /dev/null || groupadd -r %{name}
getent passwd %{name} > /dev/null || \
    useradd -r -d %{_sharedstatedir}/%{name} -g %{name} \
    -s /sbin/nologin -c "%{name} secrets manager" %{name}

%post
setcap cap_ipc_lock=+ep %{_bindir}/bao
systemctl daemon-reload
%systemd_post %{name}.service

%preun
%systemd_preun %{name}.service

%postun
%systemd_postun_with_restart %{name}.service

%changelog
%autochangelog
